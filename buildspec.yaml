version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 637423606156.dkr.ecr.ap-south-1.amazonaws.com
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t ecr001 .
      - echo Tagging the current green image as blue if it exists...
      - docker pull 637423606156.dkr.ecr.ap-south-1.amazonaws.com/ecr001:green || true
      - docker tag 637423606156.dkr.ecr.ap-south-1.amazonaws.com/ecr001:green 637423606156.dkr.ecr.ap-south-1.amazonaws.com/ecr001:blue || true
      - echo Tagging the Docker image as green...
      - docker tag ecr001:latest 637423606156.dkr.ecr.ap-south-1.amazonaws.com/ecr001:latest
  post_build:
    commands:
      - echo Pushing the Docker image with blue tag to ECR if it exists...
      - docker push 637423606156.dkr.ecr.ap-south-1.amazonaws.com/ecr001:blue || true
      - docker push 637423606156.dkr.ecr.ap-south-1.amazonaws.com/ecr001:latest
      - echo Writing image definitions file...
      - printf '[{"name":"mywebsite","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
